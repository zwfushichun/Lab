// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/HelloWorld.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GrpcLibrary {

  /// <summary>Holder for reflection information generated from protos/HelloWorld.proto</summary>
  public static partial class HelloWorldReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/HelloWorld.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HelloWorldReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chdwcm90b3MvSGVsbG9Xb3JsZC5wcm90bxILR3JwY0xpYnJhcnkiGgoMSGVs",
            "bG9SZXF1ZXN0EgoKAklkGAEgASgFIj8KDUhlbGxvUmVzcG9uc2USLgoJQ3Vz",
            "dG9tZXJzGAEgAygLMhsuR3JwY0xpYnJhcnkuQ3VzdG9tZXJPdXRwdXQi5QQK",
            "DkN1c3RvbWVyT3V0cHV0EgoKAklkGAEgASgFEhgKEFBhcmVudEN1c3RvbWVy",
            "SWQYAyABKAUSDAoEQ29kZRgEIAEoCRIOCgZDbk5hbWUYBSABKAkSDgoGRW5O",
            "YW1lGAYgASgJEhAKCEZvclNob3J0GAcgASgJEg4KBkNpdHlJZBgIIAEoBRIP",
            "CgdQcm92aWNlGAkgASgJEg8KB1ppcENvZGUYCiABKAkSCwoDQU9FGAsgASgJ",
            "EhEKCUNuQWRkcmVzcxgMIAEoCRIRCglFbkFkZHJlc3MYDSABKAkSFwoPQ3Vz",
            "dG9tZXJRdWFsaXR5GA4gASgFEg4KBlNPVVJDRRgPIAEoBRIPCgdRdWFsaXR5",
            "GBAgASgFEg0KBVRyYWRlGBEgASgFEh8KF0FnZW50VHJhbnNBZ3JlZW1lbnRE",
            "YXRlGBIgASgJEhoKEkN1c3RvbWVyQmxhY2tMZXZlbBgTIAEoBRIgChhDdXN0",
            "b21lckJsYWNrTGV2ZWxSZWFzb24YFCABKAkSEwoLTmVlZFdhcm5pbmcYFSAB",
            "KAgSFAoMV2FybmluZ1RpdGxlGBYgASgJEhYKDldhcm5pbmdDb250ZW50GBcg",
            "ASgJEhoKElN1cHBsaWVyQmxhY2tMZXZlbBgYIAEoBRIUCgxJbnZvaWNlVGl0",
            "bGUYGSABKAkSEAoIVGF4UmVnTm8YGiABKAkSEQoJSmluZ01hb05vGBsgASgJ",
            "EhMKC0xlZ2FsUGVyc29uGBwgASgJEhsKE092ZXJzZWFBc3NpZ25Gcm9maXQY",
            "HSABKAgSFAoMUmVhbEN1c3RvbWVyGB4gASgIMlQKC0dycGNTZXJ2aWNlEkUK",
            "CFNheUhlbGxvEhkuR3JwY0xpYnJhcnkuSGVsbG9SZXF1ZXN0GhouR3JwY0xp",
            "YnJhcnkuSGVsbG9SZXNwb25zZSIAMAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcLibrary.HelloRequest), global::GrpcLibrary.HelloRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcLibrary.HelloResponse), global::GrpcLibrary.HelloResponse.Parser, new[]{ "Customers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcLibrary.CustomerOutput), global::GrpcLibrary.CustomerOutput.Parser, new[]{ "Id", "ParentCustomerId", "Code", "CnName", "EnName", "ForShort", "CityId", "Provice", "ZipCode", "AOE", "CnAddress", "EnAddress", "CustomerQuality", "SOURCE", "Quality", "Trade", "AgentTransAgreementDate", "CustomerBlackLevel", "CustomerBlackLevelReason", "NeedWarning", "WarningTitle", "WarningContent", "SupplierBlackLevel", "InvoiceTitle", "TaxRegNo", "JingMaoNo", "LegalPerson", "OverseaAssignFrofit", "RealCustomer" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class HelloRequest : pb::IMessage<HelloRequest> {
    private static readonly pb::MessageParser<HelloRequest> _parser = new pb::MessageParser<HelloRequest>(() => new HelloRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HelloRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcLibrary.HelloWorldReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloRequest(HelloRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloRequest Clone() {
      return new HelloRequest(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HelloRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HelloRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HelloRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HelloResponse : pb::IMessage<HelloResponse> {
    private static readonly pb::MessageParser<HelloResponse> _parser = new pb::MessageParser<HelloResponse>(() => new HelloResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HelloResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcLibrary.HelloWorldReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloResponse(HelloResponse other) : this() {
      customers_ = other.customers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloResponse Clone() {
      return new HelloResponse(this);
    }

    /// <summary>Field number for the "Customers" field.</summary>
    public const int CustomersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcLibrary.CustomerOutput> _repeated_customers_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcLibrary.CustomerOutput.Parser);
    private readonly pbc::RepeatedField<global::GrpcLibrary.CustomerOutput> customers_ = new pbc::RepeatedField<global::GrpcLibrary.CustomerOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcLibrary.CustomerOutput> Customers {
      get { return customers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HelloResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HelloResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!customers_.Equals(other.customers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= customers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      customers_.WriteTo(output, _repeated_customers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += customers_.CalculateSize(_repeated_customers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HelloResponse other) {
      if (other == null) {
        return;
      }
      customers_.Add(other.customers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            customers_.AddEntriesFrom(input, _repeated_customers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CustomerOutput : pb::IMessage<CustomerOutput> {
    private static readonly pb::MessageParser<CustomerOutput> _parser = new pb::MessageParser<CustomerOutput>(() => new CustomerOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomerOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcLibrary.HelloWorldReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerOutput(CustomerOutput other) : this() {
      id_ = other.id_;
      parentCustomerId_ = other.parentCustomerId_;
      code_ = other.code_;
      cnName_ = other.cnName_;
      enName_ = other.enName_;
      forShort_ = other.forShort_;
      cityId_ = other.cityId_;
      provice_ = other.provice_;
      zipCode_ = other.zipCode_;
      aOE_ = other.aOE_;
      cnAddress_ = other.cnAddress_;
      enAddress_ = other.enAddress_;
      customerQuality_ = other.customerQuality_;
      sOURCE_ = other.sOURCE_;
      quality_ = other.quality_;
      trade_ = other.trade_;
      agentTransAgreementDate_ = other.agentTransAgreementDate_;
      customerBlackLevel_ = other.customerBlackLevel_;
      customerBlackLevelReason_ = other.customerBlackLevelReason_;
      needWarning_ = other.needWarning_;
      warningTitle_ = other.warningTitle_;
      warningContent_ = other.warningContent_;
      supplierBlackLevel_ = other.supplierBlackLevel_;
      invoiceTitle_ = other.invoiceTitle_;
      taxRegNo_ = other.taxRegNo_;
      jingMaoNo_ = other.jingMaoNo_;
      legalPerson_ = other.legalPerson_;
      overseaAssignFrofit_ = other.overseaAssignFrofit_;
      realCustomer_ = other.realCustomer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerOutput Clone() {
      return new CustomerOutput(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "ParentCustomerId" field.</summary>
    public const int ParentCustomerIdFieldNumber = 3;
    private int parentCustomerId_;
    /// <summary>
    ///string GuidId=2;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ParentCustomerId {
      get { return parentCustomerId_; }
      set {
        parentCustomerId_ = value;
      }
    }

    /// <summary>Field number for the "Code" field.</summary>
    public const int CodeFieldNumber = 4;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CnName" field.</summary>
    public const int CnNameFieldNumber = 5;
    private string cnName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CnName {
      get { return cnName_; }
      set {
        cnName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EnName" field.</summary>
    public const int EnNameFieldNumber = 6;
    private string enName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EnName {
      get { return enName_; }
      set {
        enName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ForShort" field.</summary>
    public const int ForShortFieldNumber = 7;
    private string forShort_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ForShort {
      get { return forShort_; }
      set {
        forShort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CityId" field.</summary>
    public const int CityIdFieldNumber = 8;
    private int cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }

    /// <summary>Field number for the "Provice" field.</summary>
    public const int ProviceFieldNumber = 9;
    private string provice_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Provice {
      get { return provice_; }
      set {
        provice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ZipCode" field.</summary>
    public const int ZipCodeFieldNumber = 10;
    private string zipCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ZipCode {
      get { return zipCode_; }
      set {
        zipCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AOE" field.</summary>
    public const int AOEFieldNumber = 11;
    private string aOE_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AOE {
      get { return aOE_; }
      set {
        aOE_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CnAddress" field.</summary>
    public const int CnAddressFieldNumber = 12;
    private string cnAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CnAddress {
      get { return cnAddress_; }
      set {
        cnAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EnAddress" field.</summary>
    public const int EnAddressFieldNumber = 13;
    private string enAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EnAddress {
      get { return enAddress_; }
      set {
        enAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CustomerQuality" field.</summary>
    public const int CustomerQualityFieldNumber = 14;
    private int customerQuality_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CustomerQuality {
      get { return customerQuality_; }
      set {
        customerQuality_ = value;
      }
    }

    /// <summary>Field number for the "SOURCE" field.</summary>
    public const int SOURCEFieldNumber = 15;
    private int sOURCE_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SOURCE {
      get { return sOURCE_; }
      set {
        sOURCE_ = value;
      }
    }

    /// <summary>Field number for the "Quality" field.</summary>
    public const int QualityFieldNumber = 16;
    private int quality_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Quality {
      get { return quality_; }
      set {
        quality_ = value;
      }
    }

    /// <summary>Field number for the "Trade" field.</summary>
    public const int TradeFieldNumber = 17;
    private int trade_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Trade {
      get { return trade_; }
      set {
        trade_ = value;
      }
    }

    /// <summary>Field number for the "AgentTransAgreementDate" field.</summary>
    public const int AgentTransAgreementDateFieldNumber = 18;
    private string agentTransAgreementDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AgentTransAgreementDate {
      get { return agentTransAgreementDate_; }
      set {
        agentTransAgreementDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CustomerBlackLevel" field.</summary>
    public const int CustomerBlackLevelFieldNumber = 19;
    private int customerBlackLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CustomerBlackLevel {
      get { return customerBlackLevel_; }
      set {
        customerBlackLevel_ = value;
      }
    }

    /// <summary>Field number for the "CustomerBlackLevelReason" field.</summary>
    public const int CustomerBlackLevelReasonFieldNumber = 20;
    private string customerBlackLevelReason_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerBlackLevelReason {
      get { return customerBlackLevelReason_; }
      set {
        customerBlackLevelReason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NeedWarning" field.</summary>
    public const int NeedWarningFieldNumber = 21;
    private bool needWarning_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NeedWarning {
      get { return needWarning_; }
      set {
        needWarning_ = value;
      }
    }

    /// <summary>Field number for the "WarningTitle" field.</summary>
    public const int WarningTitleFieldNumber = 22;
    private string warningTitle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WarningTitle {
      get { return warningTitle_; }
      set {
        warningTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "WarningContent" field.</summary>
    public const int WarningContentFieldNumber = 23;
    private string warningContent_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WarningContent {
      get { return warningContent_; }
      set {
        warningContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SupplierBlackLevel" field.</summary>
    public const int SupplierBlackLevelFieldNumber = 24;
    private int supplierBlackLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SupplierBlackLevel {
      get { return supplierBlackLevel_; }
      set {
        supplierBlackLevel_ = value;
      }
    }

    /// <summary>Field number for the "InvoiceTitle" field.</summary>
    public const int InvoiceTitleFieldNumber = 25;
    private string invoiceTitle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InvoiceTitle {
      get { return invoiceTitle_; }
      set {
        invoiceTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TaxRegNo" field.</summary>
    public const int TaxRegNoFieldNumber = 26;
    private string taxRegNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaxRegNo {
      get { return taxRegNo_; }
      set {
        taxRegNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "JingMaoNo" field.</summary>
    public const int JingMaoNoFieldNumber = 27;
    private string jingMaoNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JingMaoNo {
      get { return jingMaoNo_; }
      set {
        jingMaoNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LegalPerson" field.</summary>
    public const int LegalPersonFieldNumber = 28;
    private string legalPerson_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LegalPerson {
      get { return legalPerson_; }
      set {
        legalPerson_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OverseaAssignFrofit" field.</summary>
    public const int OverseaAssignFrofitFieldNumber = 29;
    private bool overseaAssignFrofit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OverseaAssignFrofit {
      get { return overseaAssignFrofit_; }
      set {
        overseaAssignFrofit_ = value;
      }
    }

    /// <summary>Field number for the "RealCustomer" field.</summary>
    public const int RealCustomerFieldNumber = 30;
    private bool realCustomer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RealCustomer {
      get { return realCustomer_; }
      set {
        realCustomer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomerOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomerOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ParentCustomerId != other.ParentCustomerId) return false;
      if (Code != other.Code) return false;
      if (CnName != other.CnName) return false;
      if (EnName != other.EnName) return false;
      if (ForShort != other.ForShort) return false;
      if (CityId != other.CityId) return false;
      if (Provice != other.Provice) return false;
      if (ZipCode != other.ZipCode) return false;
      if (AOE != other.AOE) return false;
      if (CnAddress != other.CnAddress) return false;
      if (EnAddress != other.EnAddress) return false;
      if (CustomerQuality != other.CustomerQuality) return false;
      if (SOURCE != other.SOURCE) return false;
      if (Quality != other.Quality) return false;
      if (Trade != other.Trade) return false;
      if (AgentTransAgreementDate != other.AgentTransAgreementDate) return false;
      if (CustomerBlackLevel != other.CustomerBlackLevel) return false;
      if (CustomerBlackLevelReason != other.CustomerBlackLevelReason) return false;
      if (NeedWarning != other.NeedWarning) return false;
      if (WarningTitle != other.WarningTitle) return false;
      if (WarningContent != other.WarningContent) return false;
      if (SupplierBlackLevel != other.SupplierBlackLevel) return false;
      if (InvoiceTitle != other.InvoiceTitle) return false;
      if (TaxRegNo != other.TaxRegNo) return false;
      if (JingMaoNo != other.JingMaoNo) return false;
      if (LegalPerson != other.LegalPerson) return false;
      if (OverseaAssignFrofit != other.OverseaAssignFrofit) return false;
      if (RealCustomer != other.RealCustomer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ParentCustomerId != 0) hash ^= ParentCustomerId.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (CnName.Length != 0) hash ^= CnName.GetHashCode();
      if (EnName.Length != 0) hash ^= EnName.GetHashCode();
      if (ForShort.Length != 0) hash ^= ForShort.GetHashCode();
      if (CityId != 0) hash ^= CityId.GetHashCode();
      if (Provice.Length != 0) hash ^= Provice.GetHashCode();
      if (ZipCode.Length != 0) hash ^= ZipCode.GetHashCode();
      if (AOE.Length != 0) hash ^= AOE.GetHashCode();
      if (CnAddress.Length != 0) hash ^= CnAddress.GetHashCode();
      if (EnAddress.Length != 0) hash ^= EnAddress.GetHashCode();
      if (CustomerQuality != 0) hash ^= CustomerQuality.GetHashCode();
      if (SOURCE != 0) hash ^= SOURCE.GetHashCode();
      if (Quality != 0) hash ^= Quality.GetHashCode();
      if (Trade != 0) hash ^= Trade.GetHashCode();
      if (AgentTransAgreementDate.Length != 0) hash ^= AgentTransAgreementDate.GetHashCode();
      if (CustomerBlackLevel != 0) hash ^= CustomerBlackLevel.GetHashCode();
      if (CustomerBlackLevelReason.Length != 0) hash ^= CustomerBlackLevelReason.GetHashCode();
      if (NeedWarning != false) hash ^= NeedWarning.GetHashCode();
      if (WarningTitle.Length != 0) hash ^= WarningTitle.GetHashCode();
      if (WarningContent.Length != 0) hash ^= WarningContent.GetHashCode();
      if (SupplierBlackLevel != 0) hash ^= SupplierBlackLevel.GetHashCode();
      if (InvoiceTitle.Length != 0) hash ^= InvoiceTitle.GetHashCode();
      if (TaxRegNo.Length != 0) hash ^= TaxRegNo.GetHashCode();
      if (JingMaoNo.Length != 0) hash ^= JingMaoNo.GetHashCode();
      if (LegalPerson.Length != 0) hash ^= LegalPerson.GetHashCode();
      if (OverseaAssignFrofit != false) hash ^= OverseaAssignFrofit.GetHashCode();
      if (RealCustomer != false) hash ^= RealCustomer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ParentCustomerId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ParentCustomerId);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Code);
      }
      if (CnName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CnName);
      }
      if (EnName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(EnName);
      }
      if (ForShort.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ForShort);
      }
      if (CityId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(CityId);
      }
      if (Provice.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Provice);
      }
      if (ZipCode.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ZipCode);
      }
      if (AOE.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(AOE);
      }
      if (CnAddress.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(CnAddress);
      }
      if (EnAddress.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(EnAddress);
      }
      if (CustomerQuality != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(CustomerQuality);
      }
      if (SOURCE != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(SOURCE);
      }
      if (Quality != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(Quality);
      }
      if (Trade != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(Trade);
      }
      if (AgentTransAgreementDate.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(AgentTransAgreementDate);
      }
      if (CustomerBlackLevel != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(CustomerBlackLevel);
      }
      if (CustomerBlackLevelReason.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(CustomerBlackLevelReason);
      }
      if (NeedWarning != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(NeedWarning);
      }
      if (WarningTitle.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(WarningTitle);
      }
      if (WarningContent.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(WarningContent);
      }
      if (SupplierBlackLevel != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(SupplierBlackLevel);
      }
      if (InvoiceTitle.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(InvoiceTitle);
      }
      if (TaxRegNo.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(TaxRegNo);
      }
      if (JingMaoNo.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(JingMaoNo);
      }
      if (LegalPerson.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(LegalPerson);
      }
      if (OverseaAssignFrofit != false) {
        output.WriteRawTag(232, 1);
        output.WriteBool(OverseaAssignFrofit);
      }
      if (RealCustomer != false) {
        output.WriteRawTag(240, 1);
        output.WriteBool(RealCustomer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ParentCustomerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ParentCustomerId);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (CnName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CnName);
      }
      if (EnName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EnName);
      }
      if (ForShort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ForShort);
      }
      if (CityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CityId);
      }
      if (Provice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Provice);
      }
      if (ZipCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ZipCode);
      }
      if (AOE.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AOE);
      }
      if (CnAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CnAddress);
      }
      if (EnAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EnAddress);
      }
      if (CustomerQuality != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CustomerQuality);
      }
      if (SOURCE != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SOURCE);
      }
      if (Quality != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Quality);
      }
      if (Trade != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Trade);
      }
      if (AgentTransAgreementDate.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AgentTransAgreementDate);
      }
      if (CustomerBlackLevel != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CustomerBlackLevel);
      }
      if (CustomerBlackLevelReason.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CustomerBlackLevelReason);
      }
      if (NeedWarning != false) {
        size += 2 + 1;
      }
      if (WarningTitle.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(WarningTitle);
      }
      if (WarningContent.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(WarningContent);
      }
      if (SupplierBlackLevel != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SupplierBlackLevel);
      }
      if (InvoiceTitle.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(InvoiceTitle);
      }
      if (TaxRegNo.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TaxRegNo);
      }
      if (JingMaoNo.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(JingMaoNo);
      }
      if (LegalPerson.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LegalPerson);
      }
      if (OverseaAssignFrofit != false) {
        size += 2 + 1;
      }
      if (RealCustomer != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomerOutput other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ParentCustomerId != 0) {
        ParentCustomerId = other.ParentCustomerId;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.CnName.Length != 0) {
        CnName = other.CnName;
      }
      if (other.EnName.Length != 0) {
        EnName = other.EnName;
      }
      if (other.ForShort.Length != 0) {
        ForShort = other.ForShort;
      }
      if (other.CityId != 0) {
        CityId = other.CityId;
      }
      if (other.Provice.Length != 0) {
        Provice = other.Provice;
      }
      if (other.ZipCode.Length != 0) {
        ZipCode = other.ZipCode;
      }
      if (other.AOE.Length != 0) {
        AOE = other.AOE;
      }
      if (other.CnAddress.Length != 0) {
        CnAddress = other.CnAddress;
      }
      if (other.EnAddress.Length != 0) {
        EnAddress = other.EnAddress;
      }
      if (other.CustomerQuality != 0) {
        CustomerQuality = other.CustomerQuality;
      }
      if (other.SOURCE != 0) {
        SOURCE = other.SOURCE;
      }
      if (other.Quality != 0) {
        Quality = other.Quality;
      }
      if (other.Trade != 0) {
        Trade = other.Trade;
      }
      if (other.AgentTransAgreementDate.Length != 0) {
        AgentTransAgreementDate = other.AgentTransAgreementDate;
      }
      if (other.CustomerBlackLevel != 0) {
        CustomerBlackLevel = other.CustomerBlackLevel;
      }
      if (other.CustomerBlackLevelReason.Length != 0) {
        CustomerBlackLevelReason = other.CustomerBlackLevelReason;
      }
      if (other.NeedWarning != false) {
        NeedWarning = other.NeedWarning;
      }
      if (other.WarningTitle.Length != 0) {
        WarningTitle = other.WarningTitle;
      }
      if (other.WarningContent.Length != 0) {
        WarningContent = other.WarningContent;
      }
      if (other.SupplierBlackLevel != 0) {
        SupplierBlackLevel = other.SupplierBlackLevel;
      }
      if (other.InvoiceTitle.Length != 0) {
        InvoiceTitle = other.InvoiceTitle;
      }
      if (other.TaxRegNo.Length != 0) {
        TaxRegNo = other.TaxRegNo;
      }
      if (other.JingMaoNo.Length != 0) {
        JingMaoNo = other.JingMaoNo;
      }
      if (other.LegalPerson.Length != 0) {
        LegalPerson = other.LegalPerson;
      }
      if (other.OverseaAssignFrofit != false) {
        OverseaAssignFrofit = other.OverseaAssignFrofit;
      }
      if (other.RealCustomer != false) {
        RealCustomer = other.RealCustomer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            ParentCustomerId = input.ReadInt32();
            break;
          }
          case 34: {
            Code = input.ReadString();
            break;
          }
          case 42: {
            CnName = input.ReadString();
            break;
          }
          case 50: {
            EnName = input.ReadString();
            break;
          }
          case 58: {
            ForShort = input.ReadString();
            break;
          }
          case 64: {
            CityId = input.ReadInt32();
            break;
          }
          case 74: {
            Provice = input.ReadString();
            break;
          }
          case 82: {
            ZipCode = input.ReadString();
            break;
          }
          case 90: {
            AOE = input.ReadString();
            break;
          }
          case 98: {
            CnAddress = input.ReadString();
            break;
          }
          case 106: {
            EnAddress = input.ReadString();
            break;
          }
          case 112: {
            CustomerQuality = input.ReadInt32();
            break;
          }
          case 120: {
            SOURCE = input.ReadInt32();
            break;
          }
          case 128: {
            Quality = input.ReadInt32();
            break;
          }
          case 136: {
            Trade = input.ReadInt32();
            break;
          }
          case 146: {
            AgentTransAgreementDate = input.ReadString();
            break;
          }
          case 152: {
            CustomerBlackLevel = input.ReadInt32();
            break;
          }
          case 162: {
            CustomerBlackLevelReason = input.ReadString();
            break;
          }
          case 168: {
            NeedWarning = input.ReadBool();
            break;
          }
          case 178: {
            WarningTitle = input.ReadString();
            break;
          }
          case 186: {
            WarningContent = input.ReadString();
            break;
          }
          case 192: {
            SupplierBlackLevel = input.ReadInt32();
            break;
          }
          case 202: {
            InvoiceTitle = input.ReadString();
            break;
          }
          case 210: {
            TaxRegNo = input.ReadString();
            break;
          }
          case 218: {
            JingMaoNo = input.ReadString();
            break;
          }
          case 226: {
            LegalPerson = input.ReadString();
            break;
          }
          case 232: {
            OverseaAssignFrofit = input.ReadBool();
            break;
          }
          case 240: {
            RealCustomer = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
